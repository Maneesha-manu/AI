global N
N = 4
def printSolution(board):
    for i in range(N):
        for j in range(N):
          print (board[i][j],end=' ')
        print()
    print()
def isSafe(board, row, col):
    for i in range(col):
        if board[row][i] == 1:
            return False
    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
    for i, j in zip(range(row, N, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
    return True
def solveNQutil(board, col):
    if col >= N:
        printSolution(board)
    for i in range(N):
        if isSafe(board, i, col):
            board[i][col] = 1
            solveNQutil(board,col+1)
            board[i][col]=0
def solveNQ():
    board = [ [0, 0, 0, 0],
              [0, 0, 0, 0],
              [0, 0, 0, 0],
              [0, 0, 0, 0]
             ]
    solveNQutil(board,0)
        
solveNQ()


--------------output------------
0 0 1 0 
1 0 0 0 
0 0 0 1 
0 1 0 0 

0 1 0 0 
0 0 0 1 
1 0 0 0 
0 0 1 0 

